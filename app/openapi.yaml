---
openapi: 3.0.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  "/login":
    post:
      summary: Login
      description: Authenticates the user, generates a token, and adds a random transaction.
      operationId: login_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Body_login_login_post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/balance":
    get:
      summary: Get Balance
      operationId: get_balance_balance_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - OAuth2PasswordBearer: []
  "/transactions":
    get:
      summary: Get Transactions
      operationId: get_transactions_transactions_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
          title: Page
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 10
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/transfer":
    post:
      summary: Transfer Funds
      operationId: transfer_funds_transfer_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: recipient_username
        in: query
        required: true
        schema:
          type: string
          title: Recipient Username
      - name: amount
        in: query
        required: true
        schema:
          type: number
          title: Amount
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/register":
    post:
      summary: Register
      operationId: register_register_post
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
          title: Username
      - name: email
        in: query
        required: true
        schema:
          type: string
          title: Email
      - name: password
        in: query
        required: true
        schema:
          type: string
          title: Password
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Body_login_login_post:
      properties:
        grant_type:
          anyOf:
          - type: string
            pattern: "^password$"
          nullable: true
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
          - type: string
          nullable: true
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          nullable: true
          title: Client Secret
      type: object
      required:
      - username
      - password
      title: Body_login_login_post
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: "/login"
